// Generated by https://quicktype.io

export interface IAssets {
  examples: IExample[];
}

export interface IDumiAssets {
  name: string;
  description: string;
  logo: string;
  assets: IAssets;
}

export interface IResource extends IDumiAssets {
  id: string;
  type: AssetsType;
}

export interface RequestParams {
  keyword?: string;
  current: number;
}

export interface IAssetDumiConifg {
  /** package name from npm */
  name: string;
  /** observe the semver version */
  version?: string;
  /** cdn host */
  registry?: string;
}

export interface IAssetGitConfig {}

export enum AssetsType {
  dumi = 'dumi',
  git = 'git',
}

export type AssetsConfig = { type: AssetsType } & IAssetDumiConifg;

export const PKG_ASSETS_META = 'dumiAssets';

export enum DEPS_TYPE {
  FILE = 'FILE',
  NPM = 'NPM',
}
export type IDepsType = keyof typeof DEPS_TYPE;

export enum EXAMPLE_TYPE {
  COMPONENT = 'COMPONENT',
  BLOCK = 'BLOCK',
  TEMPLATE = 'TEMPLATE',
}
export type IExampleType = keyof typeof EXAMPLE_TYPE;

export interface IExample {
  /** 开发者自定义的名称 */
  identifier: string;
  /** 资产名 */
  name?: string;
  /** 资产简介，例如 帮助开发者快速搭建表单页 */
  symbolId?: string;
  description: string;
  /** 资产类型 */
  type: IExampleType;
  /** 资产缩略图 */
  thumbnail: string;
  /** 资产的依赖 */
  dependencies: {
    [key: string]: {
      type: IDepsType;
      value: string;
    };
  };
}

export interface Antd {
  type: Type;
  value: string;
}

export enum Type {
  File = 'FILE',
  Npm = 'NPM',
}

export interface IndexLess {
  type: Type;
  valoue: string;
}
